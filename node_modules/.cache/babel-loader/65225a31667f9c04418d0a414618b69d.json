{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/react/firebase_project/src/components/AppRouter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { privateRoutes, publicRoutes } from '../routes';\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../utils/consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppRouter(props) {\n  _s();\n\n  const {\n    auth\n  } = useContext(Context);\n  const {\n    user\n  } = useAuthState(auth);\n  return user ? /*#__PURE__*/_jsxDEV(Switch, {\n    children: [privateRoutes.map(({\n      path,\n      component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: CHAT_ROUTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n    children: [publicRoutes.map(({\n      path,\n      component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: LOGIN_ROUTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AppRouter, \"kBnPY0QUJu39C7Kp7w35UNg3Ugs=\", true);\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/Users/macuser/Documents/react/firebase_project/src/components/AppRouter.js"],"names":["React","Route","Switch","Redirect","privateRoutes","publicRoutes","CHAT_ROUTE","LOGIN_ROUTE","AppRouter","props","auth","useContext","Context","user","useAuthState","map","path","component"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,WAA5C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,iBAAxC;;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAWC,UAAU,CAACC,OAAD,CAA3B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWC,YAAY,CAACJ,IAAD,CAA7B;AACA,SAAOG,IAAI,gBAEH,QAAC,MAAD;AAAA,eAEQT,aAAa,CAACW,GAAd,CAAkB,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,kBACd,QAAC,KAAD;AAAkB,MAAA,IAAI,EAAED,IAAxB;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAoD,MAAA,KAAK;AAAzD,OAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,CAFR,eAOI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEV;AAAd;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFG,gBAcH,QAAC,MAAD;AAAA,eAEQD,YAAY,CAACU,GAAb,CAAiB,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,kBACb,QAAC,KAAD;AAAkB,MAAA,IAAI,EAAED,IAAxB;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAoD,MAAA,KAAK;AAAzD,OAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,CAFR,eAOI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAET;AAAd;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAdR;AAwBH;;GA3BQC,S;;KAAAA,S;AA6BT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { privateRoutes, publicRoutes } from '../routes';\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../utils/consts';\nfunction AppRouter(props) {\n    const { auth } = useContext(Context)\n    const { user } = useAuthState(auth)\n    return user ?\n        (\n            <Switch>\n                {\n                    privateRoutes.map(({ path, component }) =>\n                        <Route key={path} path={path} component={component} exact />\n                    )\n\n                }\n                <Redirect to={CHAT_ROUTE} />\n            </Switch>\n        )\n        :\n        (\n            <Switch>\n                {\n                    publicRoutes.map(({ path, component }) =>\n                        <Route key={path} path={path} component={component} exact />\n                    )\n\n                }\n                <Redirect to={LOGIN_ROUTE} />\n            </Switch>\n        )\n}\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}